<?php
/**
 * Created by PhpStorm.
 * User: Ivan
 * Date: 26-Apr-18
 * Time: 13:14
 */

namespace App\Http\Controllers\Admin;

use Backpack\CRUD\app\Http\Controllers\CrudController;
use App\Http\Requests\Admin\ScheduleCrudRequest as StoreRequest;
use App\Http\Requests\Admin\ScheduleCrudRequest as UpdateRequest;
use App\Models\Schedule;
use App\Models\Module;
use App\Models\Lesson;
use Illuminate\Support\Facades\DB;


class ScheduleCrudController extends CrudController
{

    public function setup()
    {
        $this->crud->setModel('App\Models\Schedule');
        $this->crud->setRoute('admin/schedule');
        $this->crud->setEntityNameStrings('schedule', 'schedules');
        $this->crud->setCreateView('lms/admin/schedule_create');


        //getting a list of all courses
        $courses = \App\Models\Course::all()->pluck('title','id')->toArray();

        //clearing the HTML tags from the names
        foreach ($courses as $key => $value) {
            $courses[$key] = strip_tags($value);
        }


        $this->crud->setColumns([
            [
                'name' => 'id',
                'label' => 'ID'
            ],
            [
                'name' => 'name',
                'label' => 'Name'
            ],
            [
                'name' => 'course_id',
                'label' => 'Course ID'
            ],
            [
                'name' => 'schedule_type',
                'label' => 'Schedule Type'
            ]
        ]);
    }

    public function store(StoreRequest $request)
    {
        $modules = $request->input('modules');
        $lessons = $request->input('lessons');
        $name = $request->input('name');
        $schedule_type = $request->input('schedule_type');

        /*return parent::storeCrud(); // TODO: Change the autogenerated stub*/

        $schedule = new Schedule();
        $schedule->name = $name;
        $schedule->course_id = $request->input('course_id');
        $schedule->schedule_type = $request->input('schedule_type');
        $schedule->save();



        foreach ($modules as $key => $value) {
            $schedule->modules()->attach(Module::find($key));

            if ($schedule_type === "dripped") {
                DB::table('schedulables')
                    ->where([
                        ['schedule_id',$schedule->id],
                        ['schedulable_id',$key]
                    ])
                    ->update([
                        'drip_days' => $value
                    ]);
            }
            else {
                DB::table('schedulables')
                    ->where([
                        ['schedule_id',$schedule->id],
                        ['schedulable_id',$key]
                    ])
                    ->update([
                        'lock_date' => $value
                    ]);
            }


        }

        foreach ($lessons as $key => $value) {
            $schedule->lessons()->attach(Lesson::find($key));

            if ($schedule_type === "dripped") {
                DB::table('schedulables')
                    ->where([
                        ['schedule_id',$schedule->id],
                        ['schedulable_id',$key]
                    ])
                    ->update([
                        'drip_days' => $value
                    ]);
            }
            else {
                DB::table('schedulables')
                    ->where([
                        ['schedule_id',$schedule->id],
                        ['schedulable_id',$key]
                    ])
                    ->update([
                        'lock_date' => $value
                    ]);
            }
        }

        return redirect('/admin/schedule');

    }

    public function update(UpdateRequest $request)
    {
        return parent::updateCrud(); // TODO: Change the autogenerated stub
    }

}